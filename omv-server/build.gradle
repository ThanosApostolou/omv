plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group = "com.github.ThanosApostolou.omv"
version = "0.2.0"
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def mainVerticle = 'omv.server.App'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'
ext {
    guavaVersion = '29.0'
    vertxVersion = '3.9.3'
    junitJupiterVersion = '5.7.0'
    owlapiVersion = "5.1.16"
    slf4jVersion = "1.7.30"
}

repositories {
    jcenter()
}
dependencies {
    implementation "com.google.guava:guava:$guavaVersion-jre"
    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-pg-client:$vertxVersion"
    implementation "io.vertx:vertx-auth-jwt:$vertxVersion"
    implementation "net.sourceforge.owlapi:owlapi-distribution:$owlapiVersion"
    implementation "org.slf4j:slf4j-simple:$slf4jVersion"

	testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
}

wrapper {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = "6.6.1"
}

application {
    mainClassName = 'omv.server.Main'
}

shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': "$mainVerticle"
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

test {
    environment "VERTXWEB_ENVIRONMENT", "dev"
    environment "DATABASE_URL", "postgres://omv:omv@localhost:5432/omvdb"
    environment "PUBLIC_KEY", "password"
    useJUnitPlatform()
    testLogging {
         events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    environment "VERTXWEB_ENVIRONMENT", "dev"
    environment "DATABASE_URL", "postgres://omv:omv@localhost:5432/omvdb"
    environment "PUBLIC_KEY", "password"
    args = ["run", "$mainVerticle", "--launcher-class=$mainClassName", "--redeploy=$watchForChange", "--on-redeploy=$doOnChange"]
}